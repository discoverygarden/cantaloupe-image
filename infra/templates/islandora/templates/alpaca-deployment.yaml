
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: alpaca
  name: alpaca
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.alpaca.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: alpaca
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: alpaca
    spec:
      containers:
      - image: "{{ .Values.alpaca.image.repository }}:{{ .Values.alpaca.image.tag }}"
        imagePullPolicy: Always
        name: alpaca
        ports: 
        - containerPort: 8181
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          - name: ACTIVEMQ_HOST
            value: svc-activemq.{{ .Release.Namespace }}.svc.cluster.local
          - name: ACTIVEMQ_JMS_PORT
            value: '61616'
          - name: HOMARUS_URL
            value: http://svc-crayfish.{{ .Release.Namespace }}.svc.cluster.local/homarus/convert
          - name: HOUDINI_URL
            value: 'http://svc-crayfish.{{ .Release.Namespace }}.svc.cluster.local/houdini/convert'
          - name: HYPERCUBE_URL
            value: 'http://svc-crayfish.{{ .Release.Namespace }}.svc.cluster.local/hypercube'
      {{ if .Values.alpaca.image.pullSecret -}}
      imagePullSecrets:
       - name: {{ .Values.alpaca.image.pullSecret}}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}