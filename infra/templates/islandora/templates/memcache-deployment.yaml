apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: memcache
  name: memcache
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.memcache.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: memcache
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: memcache
    spec:
      containers:
      - image: "{{ .Values.memcache.image.repository }}:{{ .Values.memcache.image.tag }}"
        imagePullPolicy: Always
        name: memcache
        ports: 
        - containerPort: 11211
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      {{ if .Values.memcache.image.pullSecret -}}
      imagePullSecrets:
       - name: {{ .Values.memcache.image.pullSecret}}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
