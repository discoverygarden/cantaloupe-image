apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: crayfish
  name: crayfish
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.crayfish.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: crayfish
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: crayfish
    spec:
      containers:
      - image: "{{ .Values.crayfish.image.repository }}:{{ .Values.crayfish.image.tag }}"
        imagePullPolicy: Always
        name: crayfish
        ports: 
        - containerPort: 8000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: crayfish-key
          mountPath: /run/secrets/keys
        - name: crayfish-syn-settings
          mountPath: /opt/www/crayfish/syn-settings.xml
          subPath: syn-settings.xml
      {{ if .Values.crayfish.image.pullSecret -}}
      imagePullSecrets:
       - name: {{ .Values.crayfish.image.pullSecret}}
      {{- end }}
      volumes:
      - name: crayfish-key
        secret:
          secretName: crayfish-key
          items:
          - key: public
            path: default.pub
      - name: crayfish-syn-settings
        configMap:
          name: crayfish-syn-settings
          items:
          - key: syn-settings
            path: syn-settings.xml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
